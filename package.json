{
  "name": "go-clean-arch-lambda-api",
  "author": "",
  "license": "ISC",
  "version": "0.0.1",
  "description": "",
  "main": "index.js",
  "scripts": {
    "preinstall": "bash ./scripts/preinstall.sh",
    "test": "go test ./...",
    "lint": "golangci-lint run",
    "swag": "cd internal/controller/api && swag init -g swaggo.go -pd -o ../../../api/openapi/v2 -ot json",
    "clear:config": "rimraf deployment/output/configs/*",
    "clear:build": "rimraf deployment/output/bin/*",
    "clear:package": "rimraf deployment/*.zip",
    "clear:apidoc": "rimraf deployment/api-doc/dist",
    "clear": "npm run clear:config && npm run clear:build && npm run clear:package && npm run clear:apidoc",
    "copy:config": "copyfiles --flat configs/* deployment/output/configs",
    "copy:apidoc": "copyfiles -u 1 api/**/* deployment/api-doc/dist",
    "copy": "npm run copy:config && npm run copy:apidoc",
    "build:jwtkey": "bash ./scripts/jwt_key_gen.sh",
    "prebuild:db": "npm run clear:config && npm run copy:config",
    "build:db": "echo \"do nothing\"",
    "prebuild:apidoc": "npm run clear:config && npm run clear:apidoc && npm run copy:config",
    "build:apidoc": "npm run swag && npm run copy:apidoc",
    "prebuild:lambda": "npm run clear:config && npm run clear:build && npm run copy:config",
    "build:lambda:dummy": "set GOARCH=amd64&& set GOOS=linux&& go build -o deployment/output/bin/dummy/main cmd/dummy/main.go",
    "build:lambda:api": "set GOARCH=amd64&& set GOOS=linux&& go build -o deployment/output/bin/api/main cmd/api/main.go",
    "build:lambda:ping": "set GOARCH=amd64&& set GOOS=linux&& go build -o deployment/output/bin/ping/main cmd/ping/main.go",
    "build:lambda:auth": "set GOARCH=amd64&& set GOOS=linux&& go build -o deployment/output/bin/auth/main cmd/auth/main.go",
    "build:lambda": "npm run build:jwtkey && npm run build:lambda:dummy && npm run build:lambda:api && npm run build:lambda:ping && npm run build:lambda:auth",
    "package:db": "echo \"do nothing\"",
    "package:apidoc": "echo \"do nothing\"",
    "prepackage:lambda": "npm run clear:package",
    "package:lambda:dummy": "cd deployment/output/bin/dummy && cross-zip main dummy.zip && copyfiles dummy.zip ../../../ && rimraf dummy.zip",
    "package:lambda:api": "cd deployment/output/bin/api && cross-zip main api.zip && copyfiles api.zip ../../../ && rimraf api.zip",
    "package:lambda:ping": "cd deployment/output/bin/ping && cross-zip main ping.zip && copyfiles ping.zip ../../../ && rimraf ping.zip",
    "package:lambda:auth": "cd deployment/output/bin/auth && cross-zip main auth.zip && copyfiles auth.zip ../../../ && rimraf auth.zip",
    "package:lambda": "npm run package:lambda:dummy && npm run package:lambda:api && npm run package:lambda:ping && npm run package:lambda:auth",
    "deploy:db": "cd deployment/db && sls deploy",
    "deploy:apidoc": "cd deployment/api-doc && sls upload",
    "deploy:lambda": "cd deployment && sls deploy --force",
    "undeploy:lambda": "cd deployment && sls remove"
  },
  "devDependencies": {
    "copyfiles": "^2.4.1",
    "cross-zip-cli": "^1.0.0",
    "mime": "^3.0.0",
    "rimraf": "^3.0.2",
    "serverless-deployment-bucket": "^1.6.0"
  }
}
