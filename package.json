{
  "name": "go-clean-arch-lambda-api",
  "author": "",
  "license": "ISC",
  "version": "0.0.1",
  "description": "",
  "main": "index.js",
  "scripts": {
    "preinstall": "bash ./scripts/preinstall.sh",
    "test": "go test ./...",
    "lint": "golangci-lint run",
    "swag": "cd internal/controller/api && swag init -g swaggo.go -pd -o ../../../api/openapi/v2 -ot json",
    "jwt": "bash ./scripts/jwt_key_gen.sh \"deployment/lambda/configs\"",
    "clear:db": "cd deployment/db && rimraf configs && rimraf .serverless",
    "clear:lambda": "cd deployment/lambda && rimraf configs && rimraf *.zip && rimraf .serverless",
    "clear:apidoc": "cd deployment/api-doc && rimraf configs && rimraf dist && rimraf .serverless",
    "clear": "npm run clear:db && npm run clear:lambda && npm run clear:apidoc",
    "copy:configs:db": "copyfiles --flat configs/* deployment/db/configs",
    "copy:configs:lambda": "copyfiles --flat configs/* deployment/lambda/configs",
    "copy:configs:apidoc": "copyfiles --flat configs/* deployment/api-doc/configs",
    "copy:apidoc": "copyfiles -u 1 api/**/* deployment/api-doc/dist",
    "deploy:db": "cd deployment/db && sls deploy",
    "deploy:apidoc": "cd deployment/api-doc && sls upload",
    "deploy:lambda": "cd deployment/lambda && sls deploy --force",
    "undeploy:lambda": "cd deployment/lambda && sls remove"
  },
  "devDependencies": {
    "copyfiles": "^2.4.1",
    "cross-zip-cli": "^1.0.0",
    "mime": "^3.0.0",
    "rimraf": "^3.0.2",
    "serverless-deployment-bucket": "^1.6.0"
  }
}
